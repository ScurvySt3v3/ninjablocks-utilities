#!/bin/sh


#This file is part of Ninjablocks

### BEGIN INIT INFO
# Provides:          ninjablocks
# Required-Start:    $all
# Required-Stop:     $network $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Controls Ninjablock service.
# Description:       Controls Ninjablock service. The Internet of Things begins now!
### END INIT INFO

NAME=Ninjablocks
NODE_BIN_DIR=/usr/local/bin
NODE_PATH=/usr/local/lib/node_modules
APPLICATION_DIRECTORY=/opt/ninja
APPLICATION_START=client.js
PIDFILE=/var/run/ninjablocks.pid
LOGFILE=/var/log/ninjablocks.log
ENV=/etc/environment.local
USER=pi
# Add node to the path for situations in which the environment is passed.
PATH=$NODE_BIN_DIR:$PATH
export NODE_PATH=$NODE_PATH
 
start() {
    ps aux | grep -v grep | grep "$APPLICATION_START" > /dev/null

    if [ "$?" -eq 0 ]; then
        echo "Ninjablocks service already running"
        RETVAL=1
    else
        echo "Starting $NAME" 
        test -f $ENV && . $ENV 
        su $USER -c "forever --sourceDir $APPLICATION_DIRECTORY \
            -a  -l $LOGFILE --minUptime 5000 --spinSleepTime 2000 \
            start $APPLICATION_START 2>&1 >/dev/null & "
        RETVAL=$?
    fi
}
 
stop() {
 
    ps aux | grep -v grep | grep forever > /dev/null

    if [ $? -eq 0 ]; then
        echo "Shutting down $NAME"
        forever stopall
        RETVAL=$?
    else
        echo "$NAME is not running."
        RETVAL=0
    fi
}
 
restart() {
    echo "Restarting $NAME"
    stop
    start
}
 
status() {
    echo -n "Status for $NAME: "
    
    ps aux | grep -v grep | grep client.js > /dev/null

    if [ "$?" -eq 0 ]; then
        echo "RUNNING"
    else
        echo "NOT RUNNING"
    fi
    RETVAL=$?
}
 
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        restart
        ;;
    *)
        echo "Usage: {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $RETVAL
